name: Build

on:
  push:
    branches:
      - "test-debian"

env:
  APP_NAME: ppass
  APP_VERSION: "0.1.13"
  PPA_REPO: sguerri/ppa
  PPA_USER: SÃ©bastien GUERRI
  PPA_EMAIL: 13090870+sguerri@users.noreply.github.com
  BUILD_TYPE: Release

jobs:
  build-deb:
    #if: startsWith(github.ref, 'refs/tags/')

    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    container: ${{ matrix.config.container }}
    strategy:
      fail-fast: true
      max-parallel: 4
      matrix:
        config:
          - name: bionic
            os: ubuntu-20.04
            container: ubuntu:18.04
            triplet: x64-linux
          - name: focal
            os: ubuntu-20.04
            container: ubuntu:20.04
            triplet: x64-linux
          - name: hirsute
            os: ubuntu-20.04
            container: ubuntu:21.04
            triplet: x64-linux
          - name: impish
            os: ubuntu-20.04
            container: ubuntu:21.10
            triplet: x64-linux

    steps:
      - name: Setup container
        run: |
          apt-get update && \
          apt-get upgrade -y && \
          DEBIAN_FRONTEND=noninteractive apt-get install -y tzdata && \
          apt-get install -y sudo ca-certificates unzip gnupg curl git && \
          apt-get install -y software-properties-common && \
          apt-get install -y build-essential && \
          apt-get install -y python3 python3-venv python3-pip

      - name: Checkout current version
        uses: actions/checkout@v2

      - name: Install dependencies (focal)
        if: matrix.config.name == 'focal'
        run: |
          sudo add-apt-repository ppa:jyrki-pulliainen/dh-virtualenv && \
          sudo apt update && \
          sudo apt install -y debhelper devscripts equivs dh-virtualenv

      - name: Install dependencies (others)
        if: matrix.config.name != 'focal'
        run: |
          sudo apt install -y debhelper devscripts equivs dh-virtualenv

      - name: Install python dependencies
        run: |
          python3 -m pip install virtualenv build

      - name: Build deb
        run: |
          dpkg-buildpackage -us -uc

#      - name: Build python
#        run: |
#          python3 -m build

      - name: Copy build items
        run: |
          mkdir dist && \
          mv ../${{env.APP_NAME}}_${{env.APP_VERSION}}_amd64.deb ./dist/${{env.APP_NAME}}_${{env.APP_VERSION}}_${{ matrix.config.name }}_amd64.deb

      - uses: actions/upload-artifact@v3
        with:
          name: ${{env.APP_NAME}}_${{env.APP_VERSION}}_${{ matrix.config.name }}_amd64.deb
          path: ./dist/${{env.APP_NAME}}_${{env.APP_VERSION}}_${{ matrix.config.name }}_amd64.deb
#          name: build-items-${{ matrix.config.name }}

  build-python:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout current version
        uses: actions/checkout@v2

      - name: Install python dependencies
        run: |
          python3 -m pip install build

      - name: Build python
        run: |
          python3 -m build

      - uses: actions/upload-artifact@v3
        with:
          name: wheel
          path: dist/

#      - name: Release
#        uses: fnkr/github-action-ghr@v1
#        env:
#          GHR_PATH: dist/
#          GHR_DELETE: true
#          GHR_REPLACE: true
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#      - name: Pushes to PPA
#        run: |
#          git config --global user.email "${{ env.PPA_EMAIL }}" && \
#          git config --global user.name "${{ env.PPA_USER }}" && \
#          git clone --single-branch --branch master "https://x-access-token:${{ secrets.PUBLISH_PPA }}@github.com/${{ env.PPA_REPO }}.git" published && \
#          cp "${{ env.APP_NAME }}_${{ env.APP_VERSION }}_amd64_${{ matrix.config.name }}.deb" "published/dists/${{ matrix.config.name }}/${{ env.APP_NAME }}_${{ env.APP_VERSION }}_amd64.deb" && \
#          cd published && \
#          git add . && \
#          git commit -m "[${{ matrix.config.name }}] Add ${{ env.APP_NAME }}_${{ env.APP_VERSION }}_amd64.deb" && \
#          git pull --no-edit && \
#          git push -u origin master
